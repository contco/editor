{"version":3,"sources":["../../src/Helpers/HelperStyle.ts","../../src/Helpers/Helper.tsx","../../src/Helpers/MarkHelper.tsx","../../src/Helpers/BlockHelper.tsx","../../src/Helpers/LinkHelper.tsx","../../src/ToolBar/HoveringToolBar.tsx","../../src/ToolBar/ToolBar.tsx","../../src/plugins/ElementStyle.ts","../../src/utils/getShortLink.tsx","../../src/plugins/Element.tsx","../../src/plugins/LeafStyle.ts","../../src/plugins/Leaf.tsx","../../src/plugins/withBlockID.tsx","../../src/serialize/index.tsx","../../src/deserialize/index.ts","../../src/constant/emptyNode.ts","../../src/constant/HotKeys.tsx","../../src/Editor.tsx","../../src/constant/operations.tsx","App.tsx","index.tsx"],"names":["StyledButton","styled","span","props","reversed","active","StyledIcon","svg","color","Container","div","Triangle","StyledMenu","LinkInput","input","Button","React","forwardRef","ref","onMouseDown","children","Icon","as","width","height","Menu","Portal","container","window","rootContainer","document","createElement","parentElemNext","querySelector","parentElemReact","getElementById","appendChild","ReactDOM","createPortal","isMarkActive","editor","format","marks","Editor","ToggleMark","removeMark","addMark","MarkButton","icon","iconColor","useSlate","event","preventDefault","markFormats","LIST_TYPES","isBlockActive","nodes","match","n","type","BlockButton","ToggleBlock","isBActive","selectedFormats","filter","a","isList","includes","map","Transforms","setNodes","unwrapNodes","split","block","wrapNodes","isUrl","require","isLinkActive","LinkButton","showInput","undefined","wrapLink","url","unwrapLink","selection","isCollapsed","Range","link","text","insertNodes","collapse","edge","withLinks","edit","insertData","insertText","isInline","element","data","getData","insertLink","HoveringToolBar","el","rect","useState","isInput","setIsInput","inputToolbarPosition","setInputToolbarPosition","selectedArea","setSelectedArea","useRef","inputMenuRef","inputContainerRef","createRef","useEffect","current","style","opacity","top","left","ReactEditor","isFocused","string","domSelection","getSelection","domRange","getRangeAt","getBoundingClientRect","pageYOffset","offsetHeight","pageXOffset","offsetWidth","removeAttribute","onBlur","autoFocus","onKeyPress","e","key","val","target","value","handleInput","Bold","Italic","Underline","LinkButtonClick","position","Link","H1","H2","Quote","Coding","CLEAR_FORMAT","FixedMenu","ToolBar","refSelection","visibility","postion","padding","numberList","bulletlist","onKeyDown","Paragraph","p","theme","colors","CodeBlock","BlockQuote","blockquote","NumberList","ol","BulletList","li","Rectangle","LinkContainer","Heading1","h1","Heading2","h2","getShortLink","l","length","slice","Element","attributes","href","contentEditable","Code","code","codeblock","defaultPlaceholderStyles","pointerEvents","userSelect","display","maxWidth","whiteSpace","verticalAlign","Leaf","leaf","placeholderStyles","child","bold","italic","underlined","placeholder","withBlockID","localEditor","apply","removedIDs","Set","operation","nanoID","customAlphabet","nanoid","path","idToUse","has","id","properties","delete","node","add","checkIdAndReturnBlock","serializeParagraph","paragraphNode","textType","childNodes","textNode","push","getParagraphProperties","serializeListing","lisitNode","listType","i","listBlock","serialize","slateNodesList","serializeHeading","headingNode","headingType","childNode","getHeadingProperties","getNodeType","blockType","getChildNodes","propertyBlock","childObject","forEach","property","EMPTY_NODE","HotKeys","rawData","onContentUpdate","readOnly","className","isHoveringToolBar","editorData","setData","withPlugins","withReact","withHistory","useMemo","pipe","createEditor","renderElement","useCallback","renderLeaf","initialData","blockContent","listItem","sendContentToApp","nodeData","newNodes","isEmpty","activeObject","newChildren","raw","Slate","onChange","newValue","newData","createdBlocks","differenceBy","item","deletedBlocks","allModifiedBlocks","differenceWith","isEqual","updatedBlocks","onChangeContent","Editable","Object","keys","HOTKEYS","isHotkey","StyledEditor","_templateObject","_taggedTemplateLiteral","blockInitalValue1","createdBy","blockInitalValue2","blockRawValue","App","_useState","_useState2","_slicedToArray","setDocument","_useState3","_useState4","rawContent","setRawContent","minHeight","fontWeight","content","overflowY","JSON","stringify","render"],"mappings":"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","file":"static/js/main.8bbdbb77.chunk.js","sourcesContent":["/* eslint no-nested-ternary: \"off\" */\nimport styled from 'styled-components';\nimport { ButtonProps } from './Helper';\n\nexport const StyledButton = styled.span<ButtonProps>`\n  cursor: pointer;\n  color: ${(props) => (props.reversed ? (props.active ? 'white' : '#aaa') : props.active ? 'black' : '#ccc')};\n  background: ${(props) => (props.reversed ? (props.active ? '#9fa6bf' : '') : props.active ? '#9fa6bf' : '')};\n  &: hover {\n    background: #e7e9f5;\n  }\n  padding: 4px;\n  border-radius: 2px;\n`;\n\nexport const StyledIcon = styled.svg<ButtonProps>`\n  fill: ${(props) => props.color};\n  & use {\n    fill: ${(props) => props.color};\n    fill: ${(props) => (props.reversed ? (props.active ? '#ffffff' : '') : props.active ? '#ffffff' : '')};\n  }\n  fill: ${(props) => (props.reversed ? (props.active ? '#ffffff' : '') : props.active ? '#ffffff' : '')};\n`;\n\n// Menu\nexport const Container = styled.div`\n  padding: 8px 7px 6px;\n  position: absolute;\n  z-index: 1;\n  top: -10000px;\n  left: -10000px;\n  opacity: 0;\n  background-color: #050b21;\n  border-radius: 3px;\n  transition: opacity 0.75s;\n  & > * {\n    display: inline-block;\n  }\n`;\nexport const Triangle = styled.div`\n  position: absolute;\n  top: auto;\n  bottom: 100%;\n  left: 44%;\n  border: solid 8px;\n  border-color: transparent transparent #050b21 transparent;\n  margin: 0 auto;\n`;\nexport const StyledMenu = styled.div`\n    border-radius: 3px;\n    transition: opacity 0.75s;\n    & > * {\n      display: inline-block;\n    }\n    & > * + * {\n      margin-left: 15px;\n    `;\n\n// link input\nexport const LinkInput = styled.input`\n    border: none;\n    background: #050b21;\n    box-sizing: border-box;\n    color: #FFFFFF;\n    padding:6px\n    font-size:16px\n`;\n","import React, { FC, SVGProps, ReactChild, ReactChildren, MouseEvent } from 'react';\nimport ReactDOM from 'react-dom';\nimport { StyledButton, StyledIcon, Container, Triangle, StyledMenu } from './HelperStyle';\n\n// Button\nexport interface ButtonProps {\n  active?: boolean;\n  reversed?: boolean;\n  children?: ReactChild | ReactChildren;\n  onMouseDown?: (event: MouseEvent) => void;\n}\n\nexport const Button = React.forwardRef<HTMLSpanElement, ButtonProps>(\n  ({ active, reversed, onMouseDown, children, ...props }, ref) => (\n    <StyledButton {...props} active={active} reversed={reversed} onMouseDown={onMouseDown} ref={ref}>\n      {children}\n    </StyledButton>\n  ),\n);\n\n// icon\ninterface IconProps extends ButtonProps {\n  svg: FC<SVGProps<SVGSVGElement>>;\n  color?: string;\n}\n\nexport const Icon = React.forwardRef<SVGSVGElement, IconProps>(({ svg, ...props }, ref) => (\n  <StyledIcon as={svg} {...props} ref={ref} width=\"11px\" height=\"14px\" />\n));\n\n// Menu\nexport const Menu: any = React.forwardRef(({ ...props }, ref: React.Ref<HTMLDivElement>) => (\n  <Container ref={ref}>\n    <Triangle />\n    <StyledMenu {...props} />\n  </Container>\n));\n\ninterface PortalProps {\n  children: React.ReactNode;\n}\nexport const Portal: React.SFC<PortalProps> = ({ children }: PortalProps) => {\n  let container;\n  if (typeof window !== 'undefined') {\n    const rootContainer = document.createElement('div');\n    const parentElemNext = document.querySelector('#__next');\n    const parentElemReact = document.getElementById('root');\n    let parentElem: any;\n\n    if (parentElemNext !== null) parentElem = parentElemNext;\n    else parentElem = parentElemReact;\n\n    parentElem?.appendChild(rootContainer);\n    container = rootContainer;\n  }\n  return container ? ReactDOM.createPortal(children, container) : null;\n};\n\n// Link Input\nexport { LinkInput } from './HelperStyle';\n","import React, { FC, SVGProps, MouseEvent } from 'react';\nimport { useSlate, ReactEditor } from 'slate-react';\nimport { Editor } from 'slate';\nimport { Button, Icon } from './Helper';\n\n// is Mark Active\nexport const isMarkActive = (editor: ReactEditor, format: string) => {\n  const marks = Editor.marks(editor);\n  return marks ? marks[format] === true : false;\n};\n\n// Toggle Mark\nexport const ToggleMark = (editor: ReactEditor, format: string) => {\n  const isActive = isMarkActive(editor, format);\n  if (isActive) {\n    Editor.removeMark(editor, format);\n  } else {\n    Editor.addMark(editor, format, true);\n  }\n};\n\n// Mark Button\ninterface MarkButtonProps {\n  format: string;\n  icon: FC<SVGProps<SVGSVGElement>>;\n  iconColor?: string;\n}\n\nexport const MarkButton: (props: MarkButtonProps) => JSX.Element = ({ format, icon, iconColor = '#ffffff' }) => {\n  const editor = useSlate();\n  return (\n    <Button\n      reversed\n      active={isMarkActive(editor, format)}\n      onMouseDown={(event: MouseEvent) => {\n        event.preventDefault();\n        ToggleMark(editor, format);\n      }}\n    >\n      <Icon reversed active={isMarkActive(editor, format)} svg={icon} color={iconColor} />\n    </Button>\n  );\n};\n","import React, { FC, SVGProps, MouseEvent } from 'react';\nimport { useSlate, ReactEditor } from 'slate-react';\nimport { Editor, Transforms } from 'slate';\nimport { Button, Icon } from './Helper';\nimport { isMarkActive } from './MarkHelper';\n\nconst markFormats = ['bold', 'italic', 'underlined', 'link', 'code'];\nconst LIST_TYPES = ['numbered-list', 'bulleted-list'];\n\n// is Block Active\nconst isBlockActive = (editor: ReactEditor, format: string) => {\n  const [match]: any = Editor.nodes(editor, {\n    match: (n) => n.type === format,\n  });\n  return !!match;\n};\n\n// Toggle Block\nexport const ToggleBlock = (editor: ReactEditor, format: string) => {\n  const isBActive = isBlockActive(editor, format);\n  const selectedFormats = markFormats.filter((a) => isMarkActive(editor, a));\n  const isList = LIST_TYPES.includes(format);\n\n  if (format === 'clear-format') {\n    selectedFormats.map((a) => Editor.removeMark(editor, a));\n\n    Transforms.setNodes(editor, {\n      type: 'paragraph',\n    });\n  }\n  if (isBActive) {\n    Transforms.setNodes(editor, {\n      type: 'paragraph',\n    });\n  } else if (isList) {\n    Transforms.setNodes(editor, {\n      type: 'list-item',\n    });\n  } else {\n    Transforms.setNodes(editor, {\n      type: format,\n    });\n  }\n  // Transforms.setNodes(editor, {\n  //    type: isBActive ? 'paragraph' : isList ? 'list-item' : format,\n  // });\n  // I have chaned this nested ternary expression due to typescirpt error\n\n  Transforms.unwrapNodes(editor, {\n    match: (n) => LIST_TYPES.includes(n.type as string),\n    split: true,\n  });\n\n  // Transforms.setNodes(editor, {\n  //   type: isBActive ? 'paragraph' : isList ? 'list-item' : format,\n  // });\n\n  if (!isBActive && isList) {\n    const block = { type: format, children: [] };\n    Transforms.wrapNodes(editor, block);\n  }\n};\n\n// Block Button\ninterface BLockButtonProps {\n  format: string;\n  icon: FC<SVGProps<SVGSVGElement>>;\n  iconColor?: string;\n}\n\nexport const BlockButton: (props: BLockButtonProps) => JSX.Element = ({ format, icon, iconColor = '#ffffff' }) => {\n  const editor = useSlate();\n  return (\n    <Button\n      active={isBlockActive(editor, format)}\n      onMouseDown={(event: MouseEvent) => {\n        event.preventDefault();\n        ToggleBlock(editor, format);\n      }}\n    >\n      <Icon active={isBlockActive(editor, format)} svg={icon} color={iconColor} />\n    </Button>\n  );\n};\n","import React, { FC, SVGProps } from 'react';\nimport { useSlate } from 'slate-react';\nimport { Transforms, Editor, Range } from 'slate';\nimport { Button, Icon } from './Helper';\n\nconst isUrl = require('is-url');\n\n// isLink Active\nconst isLinkActive = (editor: any) => {\n  const [link]: any = Editor.nodes(editor, { match: (n) => n.type === 'link' });\n  return !!link;\n};\n\ninterface LinkButtonProps {\n  icon: FC<SVGProps<SVGSVGElement>>;\n  showInput: () => void;\n  iconColor?: string;\n}\n\nexport const LinkButton: (props: LinkButtonProps) => JSX.Element = ({ icon, showInput, iconColor = '#ffffff' }) => {\n  const editor = useSlate();\n  const active = isLinkActive(editor) !== undefined;\n  return (\n    <Button\n      active={!active}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        showInput();\n      }}\n      reversed={false}\n    >\n      <Icon reversed active={!active} svg={icon} color={iconColor} />\n    </Button>\n  );\n};\n\nconst unwrapLink = (editor: any) => {\n  Transforms.unwrapNodes(editor, { match: (n) => n.type === 'link' });\n};\n// link wrapper\nconst wrapLink = (editor: any, url: string) => {\n  if (isLinkActive(editor)) {\n    unwrapLink(editor);\n  }\n\n  const { selection } = editor;\n  const isCollapsed = selection && Range.isCollapsed(selection);\n  const link = {\n    type: 'link',\n    url,\n    children: isCollapsed ? [{ text: url }] : [],\n  };\n\n  if (isCollapsed) {\n    Transforms.insertNodes(editor, link);\n  } else {\n    Transforms.wrapNodes(editor, link, { split: true });\n    Transforms.collapse(editor, { edge: 'end' });\n  }\n};\n\n// with links\nexport const withLinks = (editor: any) => {\n  const edit = editor;\n  const { insertData, insertText, isInline } = editor;\n\n  edit.isInline = (element: any) => {\n    return element.type === 'link' ? true : isInline(element);\n  };\n\n  edit.insertText = (text: string) => {\n    if (text && isUrl(text)) {\n      wrapLink(editor, text);\n    } else {\n      insertText(text);\n    }\n  };\n  edit.insertData = (data: any) => {\n    const text = data.getData('text/plain');\n    if (text && isUrl(text)) {\n      wrapLink(editor, text);\n    } else {\n      insertData(data);\n    }\n  };\n  return edit;\n};\n\n// insert the link\nexport const insertLink = (editor: any, url: string) => {\n  if (editor.selection) {\n    if (isUrl(url)) wrapLink(editor, url);\n    else wrapLink(editor, `https://${url}`);\n  }\n};\n","import * as React from 'react';\nimport { useRef, useEffect, useState, createRef } from 'react';\nimport { ReactEditor, useSlate } from 'slate-react';\nimport { Editor, Range } from 'slate';\nimport { Menu, Portal, LinkInput } from '../Helpers/Helper';\nimport { BlockButton } from '../Helpers/BlockHelper';\nimport { MarkButton } from '../Helpers/MarkHelper';\nimport { LinkButton, insertLink } from '../Helpers/LinkHelper';\n\n// icons\nimport { ReactComponent as Bold } from '../assets/bold.svg';\nimport { ReactComponent as Coding } from '../assets/coding.svg';\nimport { ReactComponent as Italic } from '../assets/italic.svg';\nimport { ReactComponent as Link } from '../assets/link.svg';\nimport { ReactComponent as Quote } from '../assets/quote.svg';\nimport { ReactComponent as Underline } from '../assets/underline.svg';\nimport { ReactComponent as H1 } from '../assets/h1.svg';\nimport { ReactComponent as H2 } from '../assets/h2.svg';\nimport { ReactComponent as CLEAR_FORMAT } from '../assets/clear_format.svg';\n\nexport interface HoveringToolBarProps {}\n\nexport const HoveringToolBar: React.FC<HoveringToolBarProps> = () => {\n  const [isInput, setIsInput] = useState<boolean>(false);\n  const [inputToolbarPosition, setInputToolbarPosition] = useState<any>({});\n  const [selectedArea, setSelectedArea] = useState<any>({});\n  const ref = useRef();\n  const inputMenuRef = useRef();\n  const inputContainerRef = createRef<any>();\n  const editor = useSlate();\n  let el: any;\n  let rect: any;\n  const { selection } = editor;\n\n  useEffect(() => {\n    if (isInput) {\n      el = inputMenuRef.current;\n      if (!el) {\n        return;\n      }\n      el.style.opacity = 1;\n      el.style.top = inputToolbarPosition.top;\n      el.style.left = inputToolbarPosition.left;\n    }\n  });\n\n  // tooltip reference\n  useEffect(() => {\n    el = ref.current;\n    if (!el) {\n      return;\n    }\n    if (\n      !isInput &&\n      (!selection ||\n        !ReactEditor.isFocused(editor) ||\n        Range.isCollapsed(selection) ||\n        Editor.string(editor, selection) === '')\n    ) {\n      el.removeAttribute('style');\n      return;\n    }\n\n    const domSelection = window.getSelection();\n    const domRange = domSelection?.getRangeAt(0);\n    rect = domRange?.getBoundingClientRect();\n    el.style.opacity = 1;\n    el.style.top = `${rect?.top + window.pageYOffset - el.offsetHeight + 70}px`;\n    el.style.left = `${rect?.left + window.pageXOffset - el.offsetWidth / 2 + rect?.width / 2}px`;\n  });\n\n  const LinkButtonClick = () => {\n    setSelectedArea(selection);\n    const domSelection = window.getSelection();\n    const domRange = domSelection?.getRangeAt(0);\n    rect = domRange?.getBoundingClientRect();\n    const position = {\n      top: `${rect?.top + window.pageYOffset - el.offsetHeight + 70}px`,\n      left: `${rect?.left + window.pageXOffset - el.offsetWidth / 2 + rect?.width / 2}px`,\n    };\n    setInputToolbarPosition(position);\n    setIsInput(true);\n  };\n  const handleInput = (e: any) => {\n    if (e.key === 'Enter') {\n      const val = e.target.value;\n      editor.selection = selectedArea;\n      insertLink(editor, val);\n      setIsInput(false);\n    }\n    if (e.key === 'Escape') {\n      setIsInput(false);\n    }\n  };\n  if (isInput) {\n    return (\n      <Portal>\n        <Menu ref={inputMenuRef}>\n          <div>\n            <LinkInput\n              onBlur={() => setIsInput(false)}\n              autoFocus\n              ref={inputContainerRef}\n              type=\"text\"\n              onKeyPress={(e) => handleInput(e)}\n            />\n          </div>\n        </Menu>\n      </Portal>\n    );\n  }\n  return (\n    <Portal>\n      <Menu ref={ref}>\n        <MarkButton format=\"bold\" icon={Bold} />\n        <MarkButton format=\"italic\" icon={Italic} />\n        <MarkButton format=\"underlined\" icon={Underline} />\n        <LinkButton showInput={LinkButtonClick} icon={Link} />\n        <BlockButton format=\"heading-one\" icon={H1} />\n        <BlockButton format=\"heading-two\" icon={H2} />\n        <BlockButton format=\"block-quote\" icon={Quote} />\n        <MarkButton format=\"code\" icon={Coding} />\n        <BlockButton format=\"clear-format\" icon={CLEAR_FORMAT} />\n\n        {/* <BlockButton format=\"numbered-list\" icon=\"format_list_numbered\" />\n        <BlockButton format=\"bulleted-list\" icon=\"format_list_bulleted\" /> */}\n      </Menu>\n    </Portal>\n  );\n};\n","import * as React from 'react';\nimport { useRef, useState, useEffect, createRef } from 'react';\nimport { Editor, Range } from 'slate';\nimport { ReactEditor, useSlate } from 'slate-react';\nimport { StyledMenu } from '../Helpers/HelperStyle';\nimport { BlockButton } from '../Helpers/BlockHelper';\nimport { MarkButton } from '../Helpers/MarkHelper';\nimport { LinkButton, insertLink } from '../Helpers/LinkHelper';\nimport { Menu, Portal, LinkInput } from '../Helpers/Helper';\n\n// icons\nimport { ReactComponent as Bold } from '../assets/bold.svg';\nimport { ReactComponent as Coding } from '../assets/coding.svg';\nimport { ReactComponent as Italic } from '../assets/italic.svg';\nimport { ReactComponent as Link } from '../assets/link.svg';\nimport { ReactComponent as Quote } from '../assets/quote.svg';\nimport { ReactComponent as Underline } from '../assets/underline.svg';\nimport { ReactComponent as H1 } from '../assets/h1.svg';\nimport { ReactComponent as H2 } from '../assets/h2.svg';\n// import { ReactComponent as CLEAR_FORMAT } from '../assets/clear_format.svg';\n\nimport { ReactComponent as numberList } from '../assets/numberList.svg';\nimport { ReactComponent as bulletlist } from '../assets/bulletList.svg';\n\nconst ICON_COLOR = '#b5b9c6';\nexport const FixedMenu: any = React.forwardRef(({ ...props }, ref: React.Ref<HTMLDivElement>) => (\n  <StyledMenu ref={ref} {...props} />\n));\n\nexport interface ToolBarProps {}\n\nexport const ToolBar: React.FC<ToolBarProps> = () => {\n  const [isInput, setIsInput] = useState<boolean>(false);\n  const [inputToolbarPosition, setInputToolbarPosition] = useState<any>({});\n  const [selectedArea, setSelectedArea] = useState<any>({});\n  const editor = useSlate();\n  const { selection } = editor;\n  let el: any;\n  let rect: any;\n  const ref = useRef();\n  const refSelection = useRef();\n  const inputMenuRef = useRef();\n  const inputContainerRef = createRef<any>();\n\n  useEffect(() => {\n    if (isInput) {\n      el = inputMenuRef.current;\n      if (!el) {\n        return;\n      }\n      el.style.opacity = 1;\n      el.style.top = inputToolbarPosition.top;\n      el.style.left = inputToolbarPosition.left;\n    }\n  });\n\n  // tooltip reference\n  useEffect(() => {\n    el = refSelection.current;\n    if (!el) {\n      return;\n    }\n    if (\n      !isInput &&\n      (!selection ||\n        !ReactEditor.isFocused(editor) ||\n        Range.isCollapsed(selection) ||\n        Editor.string(editor, selection) === '')\n    ) {\n      el.removeAttribute('style');\n      return;\n    }\n\n    const domSelection = window.getSelection();\n    const domRange = domSelection?.getRangeAt(0);\n    rect = domRange?.getBoundingClientRect();\n    el.style.opacity = 1;\n    el.style.top = `${rect?.top + window.pageYOffset - el.offsetHeight + 70}px`;\n    el.style.left = `${rect?.left + window.pageXOffset - el.offsetWidth / 2 + rect?.width / 2}px`;\n    if (!isInput) {\n      el.style.visibility = `hidden`;\n      el.postion = `absolute`;\n    }\n  });\n\n  const LinkButtonClick = () => {\n    if (selection) {\n      setSelectedArea(selection);\n    }\n    const domSelection = window.getSelection();\n    const domRange = domSelection?.getRangeAt(0);\n    rect = domRange?.getBoundingClientRect();\n    const position = {\n      top: `${rect?.top + window.pageYOffset - el.offsetHeight + 70}px`,\n      left: `${rect?.left + window.pageXOffset - el.offsetWidth / 2 + rect?.width / 2 - 90}px`,\n    };\n    setInputToolbarPosition(position);\n    setIsInput(true);\n  };\n  const handleInput = (e: any) => {\n    if (e.key === 'Enter') {\n      const val = e.target.value;\n      editor.selection = selectedArea;\n      insertLink(editor, val);\n      setIsInput(false);\n    }\n    if (e.key === 'Escape') {\n      setIsInput(false);\n    }\n  };\n\n  return (\n    <div>\n      <FixedMenu ref={ref} style={{ padding: '7px 15px 6px' }}>\n        <MarkButton format=\"bold\" icon={Bold} iconColor={ICON_COLOR} />\n        <MarkButton format=\"italic\" icon={Italic} iconColor={ICON_COLOR} />\n        <MarkButton format=\"underlined\" icon={Underline} iconColor={ICON_COLOR} />\n        <LinkButton showInput={LinkButtonClick} icon={Link} iconColor={ICON_COLOR} />\n        <BlockButton format=\"heading-one\" icon={H1} iconColor={ICON_COLOR} />\n        <BlockButton format=\"heading-two\" icon={H2} iconColor={ICON_COLOR} />\n        <BlockButton format=\"block-quote\" icon={Quote} iconColor={ICON_COLOR} />\n        <MarkButton format=\"code\" icon={Coding} iconColor={ICON_COLOR} />\n        {/* <BlockButton format=\"clear-format\" icon={CLEAR_FORMAT} iconColor={ICON_COLOR} /> */}\n        <BlockButton format=\"numbered-list\" icon={numberList} iconColor={ICON_COLOR} />\n        <BlockButton format=\"bulleted-list\" icon={bulletlist} iconColor={ICON_COLOR} />\n      </FixedMenu>\n      <Menu ref={refSelection} />\n      {isInput ? (\n        <Portal>\n          <Menu ref={inputMenuRef}>\n            <LinkInput\n              onBlur={() => setIsInput(false)}\n              autoFocus\n              ref={inputContainerRef}\n              type=\"text\"\n              onKeyDown={(e) => handleInput(e)}\n            />\n          </Menu>\n        </Portal>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Paragraph = styled.p`\n  font-size: 16px;\n  line-height: 22px;\n  letter-spacing: 0.67px;\n  color: ${({ theme }) => (theme.colors !== undefined ? theme.colors.text : '#050b21')};\n`;\n\nexport const CodeBlock = styled.div`\n  font-size: 16px;\n  line-height: 22px;\n  letter-spacing: 2px;\n  width: max-content;\n  padding: 10px;\n  padding-bottom: 30px;\n  padding-right: 50px;\n`;\n\nexport const BlockQuote = styled.blockquote`\n  font-style: normal;\n  font-size: 16px;\n  min-height: 30px;\n  border-left: 4px solid ${({ theme }) => (theme.colors !== undefined ? theme.colors.text : '#000')};\n  padding-left: 8px;\n  color: ${({ theme }) => (theme.colors !== undefined ? theme.colors.text : '#050b21')};\n`;\nexport const NumberList = styled.ol`\n  font-style: normal;\n  font-size: 16px;\n  color: ${({ theme }) => (theme.colors !== undefined ? theme.colors.text : '#050b21')};\n`;\nexport const BulletList = styled.li`\n  font-style: normal;\n  font-size: 16px;\n  color: ${({ theme }) => (theme.colors !== undefined ? theme.colors.text : '#050b21')};\n`;\n\nexport const Triangle = styled.span`\n  width: 0;\n  height: 0;\n  border: solid 8px;\n  border-color: transparent transparent #050b21 transparent;\n  margin: 0 auto;\n  display: flex;\n`;\n\nexport const Rectangle = styled.span`\n  width: max-content;\n  padding: 0px 5px;\n  height: 20px;\n  border-radius: 2px;\n  background-color: #050b21;\n  font-size: 8px;\n  letter-spacing: 0.33px;\n  color: #ffffff !important;\n  display: flex;\n  align-items: center;\n`;\n\nexport const LinkContainer = styled.span`\n  z-index: 2;\n  position: absolute;\n  display: inline-block;\n  width: max-content;\n  top: 130%;\n  left: 50%;\n  margin-top: 2px;\n  transform: translate(-50%, -50%);\n  display: none;\n`;\nexport const Link = styled.a`\n  position: relative;\n  &:hover ${LinkContainer} {\n    display: initial;\n  }\n  &:hover {\n    text-decoration: underline;\n    color: ${({ theme }) => (theme.colors !== undefined ? theme.colors.link : '#050b21')};\n  }\n  text-decoration: underline;\n  color: ${({ theme }) => (theme.colors !== undefined ? theme.colors.link : '#050b21')};\n`;\n\nexport const Heading1 = styled.h1`\n  color: ${({ theme }) => (theme.colors !== undefined ? theme.colors.text : '#050b21')};\n`;\n\nexport const Heading2 = styled.h2`\n  color: ${({ theme }) => (theme.colors !== undefined ? theme.colors.text : '#050b21')};\n`;\n","const getShortLink = (l: string) => {\n  const link = l;\n  if (link && link.length > 48) {\n    return `${link.slice(0, 44)}...`;\n  }\n  return link;\n};\n\nexport default getShortLink;\n","import * as React from 'react';\nimport { RenderElementProps } from 'slate-react';\nimport {\n  Paragraph,\n  CodeBlock,\n  BlockQuote,\n  Link,\n  LinkContainer,\n  Triangle,\n  Rectangle,\n  Heading1,\n  Heading2,\n  NumberList,\n  BulletList,\n} from './ElementStyle';\nimport getShortLink from '../utils/getShortLink';\n\nconst Element: React.FC<RenderElementProps> = ({ attributes, children, element }: any) => {\n  switch (element.type) {\n    case 'paragraph':\n      return <Paragraph {...attributes}>{children}</Paragraph>;\n    case 'code-block':\n      return <CodeBlock {...attributes}>{children} </CodeBlock>;\n    case 'block-quote':\n      return <BlockQuote {...attributes}>{children}</BlockQuote>;\n    case 'bulleted-list':\n      return <ul {...attributes}>{children}</ul>;\n    case 'heading-one':\n      return <Heading1 {...attributes}>{children}</Heading1>;\n    case 'heading-two':\n      return <Heading2 {...attributes}>{children}</Heading2>;\n    case 'list-item':\n      return <BulletList {...attributes}>{children}</BulletList>;\n    case 'numbered-list':\n      return <NumberList {...attributes}>{children}</NumberList>;\n    case 'link':\n      return (\n        <Link {...attributes} href={element.url} target=\"_blank\" contentEditable={false}>\n          {children}\n          <LinkContainer>\n            <Triangle />\n            <Rectangle>{getShortLink(element?.url)}</Rectangle>\n          </LinkContainer>\n        </Link>\n      );\n    default:\n      return <p {...attributes}>{children}</p>;\n  }\n};\n\nexport default Element;\n","import styled from 'styled-components';\n\nexport const Code = styled.code`\n  padding: 5px;\n  color: ${({ theme }) => (theme.colors !== undefined ? theme.colors.text : '#050b21')};\n  background: ${({ theme }) => (theme.colors !== undefined ? theme.colors.codeblock : '#050b210d')};\n`;\n\nexport const defaultPlaceholderStyles = {\n  pointerEvents: 'none',\n  userSelect: 'none',\n  display: 'inline-block',\n  width: '0',\n  maxWidth: '100%',\n  whiteSpace: 'nowrap',\n  verticalAlign: 'text-top',\n  height: 0,\n};\n","import * as React from 'react';\nimport { Text } from 'slate';\nimport { Code, defaultPlaceholderStyles } from './LeafStyle';\n\ninterface PlaceholderLeaf extends Text {\n  placeholder?: string;\n}\ninterface CustomLeafProps {\n  children: any;\n  leaf: PlaceholderLeaf;\n  text: Text;\n  attributes: {\n    'data-slate-leaf': true;\n  };\n  placeholderStyles?: any;\n}\n\nconst Leaf: React.FC<CustomLeafProps> = ({ attributes, children, leaf, placeholderStyles }) => {\n  let child = children;\n  if (leaf.bold) {\n    child = <strong>{child}</strong>;\n  }\n  if (leaf.code) {\n    child = <Code>{child}</Code>;\n  }\n  if (leaf.italic) {\n    child = <em>{child}</em>;\n  }\n  if (leaf.underlined) {\n    child = <u>{child}</u>;\n  }\n  if (leaf.placeholder) {\n    return (\n      <span {...attributes}>\n        <span contentEditable={false} style={{ ...placeholderStyles, ...defaultPlaceholderStyles }}>\n          {leaf.placeholder}\n        </span>\n        <span data-slate-zero-width=\"n\" data-slate-length=\"0\">\n          &#65279;\n          <br />\n        </span>\n      </span>\n    );\n  }\n  return <span {...attributes}>{child}</span>;\n};\n\nexport default Leaf;\n","import { customAlphabet } from 'nanoid';\n\nconst withBlockID = (editor: any) => {\n  const localEditor = editor;\n  const { apply } = localEditor;\n  localEditor.removedIDs = new Set();\n  localEditor.apply = (operation: any) => {\n    const nanoid = customAlphabet('1234567890', 18);\n    const nanoID = nanoid();\n    if (operation.type === 'insert_node' && operation.path.length === 1) {\n      let idToUse = nanoID;\n      if (localEditor.removedIDs.has(operation.id)) {\n        idToUse = operation.properties.id;\n        localEditor.removedIDs.delete(idToUse);\n      }\n      return apply({\n        ...operation,\n        node: { ...operation.node, id: idToUse },\n      });\n    }\n    if (operation.type === 'split_node' && operation.path.length === 1) {\n      let idToUse = nanoID;\n      if (localEditor.removedIDs.has(operation.id)) {\n        idToUse = operation.id;\n        localEditor.removedIDs.delete(idToUse);\n      }\n      return apply({\n        ...operation,\n        properties: { ...operation.properties, id: idToUse },\n      });\n    }\n    if (operation.type === 'split_node') {\n      const idToUse = nanoID;\n      return apply({\n        ...operation,\n        properties: { ...operation.properties, id: idToUse },\n      });\n    }\n    if (operation.type === 'merge_node' && operation.path.length === 1) {\n      localEditor.removedIDs.add(operation.properties.id);\n      return apply(operation);\n    }\n    return apply(operation);\n  };\n  return localEditor;\n};\nexport default withBlockID;\n","/* eslint-disable no-underscore-dangle */\n\nconst getParagraphText = (textNode: any) => {\n  if ('type' in textNode && textNode.type === 'link') {\n    return textNode.children[0].text;\n  }\n  return textNode.text;\n};\n\nconst getParagraphProperties = (textNode: any) => {\n  const properties = [];\n  if ('type' in textNode && textNode.type === 'link') {\n    properties.push('a', textNode.url);\n  } else if (textNode.code) {\n    properties.push('code');\n  } else {\n    if (textNode.bold) properties.push('b');\n    if (textNode.italic) properties.push('i');\n    if (textNode.underlined) properties.push('u');\n  }\n  return properties;\n};\n\nconst getHeadingProperties = (textNode: any) => {\n  const properties = [];\n  if (textNode.italic) properties.push('i');\n  if (textNode.underlined) properties.push('u');\n  return properties;\n};\n\nconst checkIdAndReturnBlock = (type: string, document: any, node: any) => {\n  if (node.id) {\n    return { id: node.id, type, document };\n  }\n  return { type, document };\n};\n\nconst serializeParagraph = (paragraphNode: any, textType: string) => {\n  const document = paragraphNode.children.map((childNodes: any) => {\n    const text = getParagraphText(childNodes);\n    const properties = getParagraphProperties(childNodes);\n    return { text, properties };\n  });\n  const paragraphBlock = checkIdAndReturnBlock(textType, document, paragraphNode);\n  return paragraphBlock;\n};\nconst serializeListing = (lisitNode: any, listType: string) => {\n  const children = [];\n  const { id } = lisitNode;\n  for (let i = 0; i < lisitNode.children.length; i += 1) {\n    children.push(serializeParagraph(lisitNode.children[i], 'list-item'));\n  }\n  const listBlock = { id: '', children, type: listType };\n  if (id) {\n    listBlock.id = id;\n  }\n  return listBlock;\n};\nconst serializeHeading = (headingNode: any, headingType: string) => {\n  const document = headingNode.children.map((childNode: any) => {\n    const properties = getHeadingProperties(childNode);\n    return { text: childNode.text, properties };\n  });\n  const headingBlock = checkIdAndReturnBlock(headingType, document, headingNode);\n  return headingBlock;\n};\n\nconst serialize = (slateNodesList: any) => {\n  const serializedBlocks = slateNodesList.map((node: any) => {\n    switch (node.type) {\n      case 'paragraph':\n        return serializeParagraph(node, 'text');\n      case 'block-quote':\n        return serializeParagraph(node, 'block-quote');\n      case 'numbered-list':\n        return serializeListing(node, 'numbered-list');\n      case 'bulleted-list':\n        return serializeListing(node, 'bulleted-list');\n      case 'heading-one':\n      case 'heading-two':\n        return serializeHeading(node, node.type);\n      default:\n        return serializeParagraph(node, 'text');\n    }\n  });\n  return serializedBlocks;\n};\nexport default serialize;\n","/* eslint-disable no-underscore-dangle */\n\nconst getNodeType = (blockType: string) => {\n  switch (blockType) {\n    case 'text':\n      return 'paragraph';\n    default:\n      return blockType;\n  }\n};\n\nconst getChildNodes = (block: any) => {\n  if (block && block.document) {\n    const blockDocumentsList = block.document;\n    const childNodes = blockDocumentsList.map((propertyBlock: any) => {\n      const { properties, text } = propertyBlock;\n      if ((properties !== undefined && properties.length === 0) || properties === undefined) {\n        return { text };\n      }\n      let childObject: any = { text };\n      properties.forEach((property: string) => {\n        if (property === 'a') {\n          childObject = {\n            type: 'link',\n            url: properties[1],\n            children: [{ text }],\n          };\n        } else {\n          switch (property) {\n            case 'b':\n              childObject.bold = true;\n              break;\n            case 'i':\n              childObject.italic = true;\n              break;\n            case 'u':\n              childObject.underlined = true;\n              break;\n            case 'code':\n              childObject.code = true;\n              break;\n            default:\n              break;\n          }\n        }\n      });\n      return childObject;\n    });\n    return childNodes;\n  }\n  return [];\n};\n\nconst deserialization = (blockContentList: any) => {\n  const deserializedContent = blockContentList.map((blockContent: any) => {\n    const block = blockContent;\n    if (block.type === 'numbered-list' || block.type === 'bulleted-list') {\n      const listItem = block?.children.map((child: any) => {\n        const children = getChildNodes(child);\n        const type = getNodeType(child.type);\n        return { id: child.id, type, children };\n      });\n      const type = getNodeType(block.type);\n      return { id: block.id, type, children: listItem };\n    }\n\n    const children = getChildNodes(block);\n    const type = getNodeType(block.type);\n    return { id: block.id, type, children };\n  });\n  return deserializedContent;\n};\n\nexport default deserialization;\n","import { Node } from 'slate';\n\nconst EMPTY_NODE: Array<Node> = [\n  {\n    type: 'paragraph',\n    children: [\n      {\n        text: '',\n      },\n    ],\n  },\n];\nexport default EMPTY_NODE;\n","const HotKeys = {\n  'mod+b': 'bold',\n  'mod+i': 'italic',\n  'mod+u': 'underlined',\n  'mod+`': 'code',\n};\n\nexport default HotKeys;\n","/* eslint no-underscore-dangle:off */\nimport * as React from 'react';\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport { createEditor, Node } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\n\nimport { withHistory } from 'slate-history';\nimport { pipe } from '@udecode/slate-plugins';\nimport { differenceBy, differenceWith, isEmpty, isEqual } from 'lodash';\nimport isHotkey from 'is-hotkey';\nimport { HoveringToolBar, ToolBar } from './ToolBar';\nimport { withLinks } from './Helpers/LinkHelper';\nimport Element from './plugins/Element';\nimport Leaf from './plugins/Leaf';\nimport withBlockID from './plugins/withBlockID';\nimport serialize from './serialize/index';\nimport deserialize from './deserialize/index';\nimport { ADD, UPDATE, DELETE } from './constant/operations';\nimport EMPTY_NODE from './constant/emptyNode';\nimport { ToggleMark } from './Helpers/MarkHelper';\nimport HOTKEYS from './constant/HotKeys';\n\ninterface Props {\n  data?: any;\n  rawData?: any;\n  onContentUpdate: (content: any) => void;\n  initialData?: any;\n  readOnly?: boolean;\n  attributes?: any;\n  element?: any;\n  placeholder?: string;\n  placeholderStyles?: any;\n  className?: string;\n  isHoveringToolBar?: boolean;\n}\n\nconst Editor: (props: Props) => any = ({\n  data,\n  rawData,\n  onContentUpdate,\n  readOnly = false,\n  placeholder = '',\n  placeholderStyles = {},\n  className,\n  isHoveringToolBar = false,\n}) => {\n  const [editorData, setData] = useState(EMPTY_NODE);\n  const withPlugins = [withReact, withHistory, withLinks, withBlockID] as const;\n  const editor: any = useMemo(() => pipe(createEditor(), ...withPlugins), []);\n  const renderElement = useCallback((props) => <Element {...props} />, []);\n  const renderLeaf = useCallback((props) => <Leaf {...props} placeholderStyles={placeholderStyles} />, []);\n\n  useEffect(() => {\n    if (data && data?.length) {\n      const initialData = deserialize(data);\n      setData(initialData);\n    } else if (rawData) {\n      setData(rawData);\n    }\n  }, [data, rawData]);\n\n  const sendContentToApp = (nodeData: any, operation: string, newNodes: any) => {\n    if (!isEmpty(nodeData)) {\n      const type = nodeData.length === 1 ? 'single' : 'multi';\n      const activeObject = {\n        data: serialize(nodeData),\n        type,\n        operation,\n        newChildren: serialize(newNodes),\n        raw: newNodes,\n      };\n      onContentUpdate(activeObject);\n    }\n  };\n\n  const onChangeContent = (newData: any) => {\n    const createdBlocks = differenceBy(newData, editorData, (item: Node) => item.id);\n    if (!isEmpty(createdBlocks)) {\n      sendContentToApp(createdBlocks, ADD, newData);\n    }\n    const deletedBlocks = differenceBy(editorData, newData, (item: Node) => item.id);\n    sendContentToApp(deletedBlocks, DELETE, newData);\n    const allModifiedBlocks = differenceWith(newData, editorData, isEqual);\n    const updatedBlocks = differenceBy(allModifiedBlocks, createdBlocks, (item: Node) => item.id);\n    sendContentToApp(updatedBlocks, UPDATE, newData);\n    setData(newData);\n  };\n\n  const Listener = (event: any) => {\n    Object.keys(HOTKEYS).forEach((key) => {\n      if (isHotkey(key, event as any)) {\n        event.preventDefault();\n        const mark = HOTKEYS[key];\n        ToggleMark(editor, mark);\n      }\n    });\n  };\n\n  return (\n    <Slate editor={editor} value={editorData} onChange={(newValue: any) => onChangeContent(newValue)}>\n      <Editable\n        className={className}\n        placeholder={placeholder}\n        renderElement={renderElement}\n        renderLeaf={renderLeaf}\n        onKeyDown={Listener}\n        readOnly={readOnly}\n      />\n      {isHoveringToolBar ? <HoveringToolBar /> : <ToolBar />}\n    </Slate>\n  );\n};\n\nexport default React.memo(Editor);\n","export const DELETE = 'delete';\nexport const UPDATE = 'update';\nexport const ADD = 'add';\n","/* eslint no-use-before-define: 0 */  // --> OFF\nimport React, { useState, useEffect } from 'react';\nimport { Editor } from 'editor';\nimport styled from 'styled-components';\n\nconst StyledEditor = styled(Editor)`\n  height: 60vh;\n  background-color: #fef9e7;\n  overflow-y: auto;\n`;\n\n// const StyledRawViewer = styled(RawViewer)`\n//   background-color: #f1f1f1;\n// `;\n\nconst App = () => {\n  const [document, setDocument] = useState<any>(blockInitalValue1);\n  const [rawContent, setRawContent] = useState<any>(null);\n\n  useEffect(() => {\n    setDocument(blockInitalValue2);\n  }, []);\n\n  const onContentUpdate = (content: any) => {\n    setRawContent(content.raw);\n    setDocument(content.newChildren)\n  };\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ minHeight: 200, width: '33vw' }}>\n        <StyledEditor\n          placeholder=\"Click anywhere to start typing\"\n          placeholderStyles={{ color: 'blue', fontWeight: 'bold' }}\n          data={document}\n          onContentUpdate={onContentUpdate}\n        />\n      </div>\n      {/* <Viewer data={document} /> */}\n      {/* {rawContent ? <StyledRawViewer data={rawContent} /> : null} */}\n      <div>\n        <h3>Raw Data</h3>\n        <div style={{ width: '33vw', height: '500px', overflowY: 'scroll' }}>\n          <pre>\n            {JSON.stringify(rawContent || blockRawValue, undefined, 2)}\n          </pre>\n        </div>\n      </div>\n      <div>\n        <h3>Serialized Data</h3>\n        <div style={{ width: '33vw', height: '500px', overflowY: 'scroll' }}>\n          <pre>\n            {JSON.stringify(document, undefined, 2)}\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst blockInitalValue1 = [\n  {\n    id: '0',\n    type: 'text',\n    document: [\n      {\n        text: 'naa',\n        properties: [],\n      },\n    ],\n    createdBy: '',\n  },\n];\nconst blockInitalValue2 = [\n  {\n    id: '1',\n    type: 'heading-one',\n    document: [\n      {\n        text: '  Heading One',\n        properties: ['i', 'u'],\n      },\n    ],\n  },\n  {\n    id: '2',\n    type: 'heading-two',\n    document: [\n      {\n        text: '   Heading Two',\n        properties: [],\n      },\n    ],\n  },\n  {\n    id: '3',\n    type: 'block-quote',\n    document: [\n      {\n        text: 'What Goes Around Comes Around',\n      },\n    ],\n  },\n  {\n    id: '4',\n    type: 'text',\n    document: [\n      { text: '        This is editable, ', properties: [] },\n      { text: 'rich ', properties: ['b'] },\n      { text: 'text', properties: ['b', 'u'] },\n      { text: ', much ', properties: ['b', 'i'] },\n      { text: 'better than a' },\n      { text: 'Hello World', properties: ['code'] },\n      { text: 'link check', properties: ['a', 'https://google.com'] },\n      { text: ' better than a' },\n    ],\n  },\n  {\n    id: '5',\n    type: 'numbered-list',\n    children: [\n      {\n        id: '6',\n        type: 'list-item',\n        document: [{ text: 'number list point 1', properties: [] }],\n      },\n      {\n        id: '7',\n        type: 'list-item',\n        document: [{ text: 'number list point 2 ', properties: ['b'] }],\n      },\n    ],\n  },\n  {\n    id: '8',\n    type: 'bulleted-list',\n    children: [\n      {\n        id: '9',\n        type: 'list-item',\n        document: [{ text: 'Bulleted list point 1', properties: [] }],\n      },\n      {\n        id: '10',\n        type: 'list-item',\n        document: [{ text: 'Bulleted list point 2 ', properties: ['b'] }],\n      },\n    ],\n  },\n];\n\nconst blockRawValue = [\n  {\n    \"id\": \"1\",\n    \"type\": \"heading-one\",\n    \"children\": [\n      {\n        \"text\": \"  Heading One\",\n        \"italic\": true,\n        \"underlined\": true\n      }\n    ]\n  },\n  {\n    \"id\": \"2\",\n    \"type\": \"heading-two\",\n    \"children\": [\n      {\n        \"text\": \"   Heading Two\"\n      }\n    ]\n  },\n  {\n    \"id\": \"3\",\n    \"type\": \"block-quote\",\n    \"children\": [\n      {\n        \"text\": \"What Goes Around Comes Around\"\n      }\n    ]\n  },\n  {\n    \"id\": \"4\",\n    \"type\": \"paragraph\",\n    \"children\": [\n      {\n        \"text\": \"        This is editable, \"\n      },\n      {\n        \"text\": \"rich \",\n        \"bold\": true\n      },\n      {\n        \"text\": \"text\",\n        \"bold\": true,\n        \"underlined\": true\n      },\n      {\n        \"text\": \", much \",\n        \"bold\": true,\n        \"italic\": true\n      },\n      {\n        \"text\": \"better than a\"\n      },\n      {\n        \"text\": \"Hello World\",\n        \"code\": true\n      },\n      {\n        \"type\": \"link\",\n        \"url\": \"https://google.com\",\n        \"children\": [\n          {\n            \"text\": \"link check\"\n          }\n        ]\n      },\n      {\n        \"text\": \" better than a\"\n      }\n    ]\n  },\n  {\n    \"id\": \"5\",\n    \"type\": \"numbered-list\",\n    \"children\": [\n      {\n        \"id\": \"6\",\n        \"type\": \"list-item\",\n        \"children\": [\n          {\n            \"text\": \"number list point 1\"\n          }\n        ]\n      },\n      {\n        \"id\": \"7\",\n        \"type\": \"list-item\",\n        \"children\": [\n          {\n            \"text\": \"number list point 2 \",\n            \"bold\": true\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"id\": \"8\",\n    \"type\": \"bulleted-list\",\n    \"children\": [\n      {\n        \"id\": \"9\",\n        \"type\": \"list-item\",\n        \"children\": [\n          {\n            \"text\": \"\"\n          }\n        ]\n      },\n      {\n        \"id\": \"349748935370791158\",\n        \"type\": \"list-item\",\n        \"children\": [\n          {\n            \"text\": \"sBulleted list point 1\"\n          }\n        ]\n      },\n      {\n        \"id\": \"10\",\n        \"type\": \"list-item\",\n        \"children\": [\n          {\n            \"text\": \"Bulleted list point 2 \",\n            \"bold\": true\n          }\n        ]\n      }\n    ]\n  }\n]\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}